{
  "tools": [
    {
      "name": "restart_workflow",
      "description": "重新啟動（或啟動）工作流程。",
      "parameters": {
        "properties": {
          "name": {
            "description": "工作流程的名稱。",
            "type": "string"
          }
        },
        "required": ["name"],
        "type": "object"
      }
    },
    {
      "name": "search_filesystem",
      "description": "此工具會搜尋並開啟程式碼庫中相關的檔案",
      "parameters": {
        "properties": {
          "class_names": {
            "default": [],
            "description": "要在程式碼庫中搜尋的特定類別名稱清單。區分大小寫且僅支援完全符合。用於尋找特定類別定義或其使用情形。",
            "items": {"type": "string"},
            "type": "array"
          },
          "code": {
            "default": [],
            "description": "要在程式碼庫中搜尋的完整程式碼片段清單。適合尋找特定實作或模式。每個片段應為完整的程式碼片段，而非僅是關鍵字。",
            "items": {"type": "string"},
            "type": "array"
          },
          "function_names": {
            "default": [],
            "description": "要搜尋的特定函式或方法名稱清單。區分大小寫且僅支援完全符合。用於定位函式定義或其在程式碼中的呼叫。",
            "items": {"type": "string"},
            "type": "array"
          },
          "query_description": {
            "anyOf": [{"type": "string"}, {"type": "null"}],
            "default": null,
            "description": "以自然語言描述要進行語意相似度搜尋的查詢。請用白話文描述你要找的內容，例如「尋找資料庫連線的錯誤處理」或「定位驗證中介軟體的實作」。"
          }
        },
        "type": "object"
      }
    },
    {
      "name": "packager_tool",
      "description": "安裝語言（如有需要）並安裝或解除安裝一系列函式庫或專案相依套件。請使用此工具來安裝相依套件，而非執行 shell 指令或手動編輯檔案。若要新增系統相依套件，請將 language_or_system 設為 system，而非使用 apt install。首次安裝函式庫時會自動建立必要的專案檔案（如 'package.json'、'cargo.toml' 等）。這會自動重新啟動所有工作流程。",
      "parameters": {
        "properties": {
          "dependency_list": {
            "default": [],
            "description": "要安裝的系統相依套件或函式庫清單。系統相依套件為 Nixpkgs 套件集中的套件（屬性路徑）。系統相依套件範例：['jq', 'ffmpeg', 'imagemagick']。函式庫為特定程式語言的套件。函式庫範例：['express'], ['lodash']。",
            "items": {"type": "string"},
            "type": "array"
          },
          "install_or_uninstall": {
            "description": "要安裝還是解除安裝。",
            "enum": ["install", "uninstall"],
            "type": "string"
          },
          "language_or_system": {
            "description": "要安裝/解除安裝函式庫的語言，例如 'nodejs'、'bun'、'python' 等。若要安裝/解除安裝系統相依套件，請使用 system。",
            "type": "string"
          }
        },
        "required": ["install_or_uninstall", "language_or_system"],
        "type": "object"
      }
    },
    {
      "name": "programming_language_install_tool",
      "description": "如果程式無法執行，可能是尚未安裝該程式語言。請使用此工具安裝。若需使用 python，請在 programming_languages 中加入 'python-3.11'。若需 Python 3.10，請用 'python-3.10'。若需 Node.js，請用 'nodejs-20'。Node.js 18 請用 'nodejs-18'。注意，這也會安裝語言的套件管理器，無需另外安裝。",
      "parameters": {
        "properties": {
          "programming_languages": {
            "description": "要安裝的程式語言 ID 清單",
            "items": {"type": "string"},
            "type": "array"
          }
        },
        "required": ["programming_languages"],
        "type": "object"
      }
    },
    {
      "name": "create_postgresql_database_tool",
      "description": "當專案需要 PostgreSQL 資料庫時，可以使用此工具建立資料庫。建立成功後，將可取得以下環境變數：DATABASE_URL、PGPORT、PGUSER、PGPASSWORD、PGDATABASE、PGHOST\n你可以在專案中使用這些環境變數來連接資料庫。",
      "parameters": {
        "properties": {},
        "type": "object"
      }
    },
    {
      "name": "check_database_status",
      "description": "檢查指定的資料庫是否可用且可存取。\n此工具用於驗證指定資料庫的連線與狀態。",
      "parameters": {
        "properties": {},
        "type": "object"
      }
    },
    {
      "name": "str_replace_editor",
      "description": "自訂檔案檢視、建立與編輯工具\n* 狀態會在指令呼叫與與使用者討論間持續保留\n* 若 path 為檔案，view 會顯示 cat -n 的結果。若 path 為資料夾，view 會列出最多 2 層的非隱藏檔案與資料夾\n* 若指定 path 已存在檔案，則無法使用 create 指令\n* 若 command 產生過長輸出，會被截斷並標記為 <response clipped>\n* undo_edit 指令會還原 path 檔案的最後一次編輯\n\nstr_replace 指令使用注意事項：\n* old_str 參數必須精確符合原始檔案中的一行或多行。請注意空白字元！\n* 若 old_str 在檔案中不唯一，則不會執行取代。請在 old_str 中加入足夠上下文以確保唯一\n* new_str 參數應包含要取代 old_str 的編輯內容",
      "parameters": {
        "properties": {
          "command": {
            "description": "要執行的指令。允許的選項有：view、create、str_replace、insert、undo_edit。",
            "enum": ["view", "create", "str_replace", "insert", "undo_edit"],
            "type": "string"
          },
          "file_text": {
            "description": "create 指令必填，為要建立檔案的內容。",
            "type": "string"
          },
          "insert_line": {
            "description": "insert 指令必填。new_str 會插入在 path 的 insert_line 之後。",
            "type": "integer"
          },
          "new_str": {
            "description": "str_replace 指令的選填參數，包含要取代的內容（若未給定則不新增內容）。insert 指令必填，為要插入的內容。",
            "type": "string"
          },
          "old_str": {
            "description": "str_replace 指令必填，為要取代的原始內容。",
            "type": "string"
          },
          "path": {
            "description": "檔案或資料夾的絕對路徑，例如 /repo/file.py 或 /repo。",
            "type": "string"
          },
          "view_range": {
            "description": "view 指令的選填參數，當 path 指向檔案時可用。若未指定則顯示整個檔案。若有指定，則顯示指定行號範圍，例如 [11, 12] 會顯示第 11 與 12 行。行號從 1 開始。設為 [start_line, -1] 會顯示從 start_line 到檔案結尾的所有行。",
            "items": {"type": "integer"},
            "type": "array"
          }
        },
        "required": ["command", "path"],
        "type": "object"
      }
    },
    {
      "name": "bash",
      "description": "在 bash shell 執行指令\n* 使用此工具時，command 參數內容不需進行 XML 轉義。\n* 可透過 apt 與 pip 取得常見的 linux 與 python 套件。\n* 狀態會在指令呼叫與與使用者討論間持續保留。\n* 若要檢視檔案特定行號範圍，例如第 10-25 行，請用 'sed -n 10,25p /path/to/the/file'。\n* 請避免產生大量輸出的指令。\n* 請將長時間執行的指令放到背景執行，例如 'sleep 10 &' 或在背景啟動伺服器。",
      "parameters": {
        "properties": {
          "command": {
            "description": "要執行的 bash 指令。除非工具正在重新啟動，否則必填。",
            "type": "string"
          },
          "restart": {
            "description": "若設為 true 則會重新啟動此工具。否則請勿指定。",
            "type": "boolean"
          }
        },
        "type": "object"
      }
    },
    {
      "name": "workflows_set_run_config_tool",
      "description": "設定執行 shell 指令的背景任務。\n適用於啟動開發伺服器、建置流程或專案所需的其他長時間執行任務。\n若為伺服器，請務必在 wait_for_port 欄位指定監聽的 port，這樣系統會等到該 port 準備好才視為啟動完成。\n\n範例：\n- Node.js 伺服器：name 設為 'Server'，command 設為 'npm run dev'，wait_for_port 設為 5000\n- Python 腳本：name 設為 'Data Processing'，command 設為 'python process_data.py'\n\n可設定多個任務，專案啟動時會平行執行。\n設定後會自動開始執行。\n\n請一律將應用程式服務於 5000 port，即使該 port 有問題也要使用：這是唯一未被防火牆阻擋的 port。\n",
      "parameters": {
        "properties": {
          "command": {
            "description": "要執行的 shell 指令。專案啟動時會在背景執行。",
            "type": "string"
          },
          "name": {
            "description": "用來識別指令的唯一名稱。系統會用來追蹤指令。",
            "type": "string"
          },
          "wait_for_port": {
            "anyOf": [{"type": "integer"}, {"type": "null"}],
            "default": null,
            "description": "若指令會啟動監聽 port 的程序，請在此指定 port 號。\n系統會等到該 port 準備好才視為啟動完成。"
          }
        },
        "required": ["name", "command"],
        "type": "object"
      }
    },
    {
      "name": "workflows_remove_run_config_tool",
      "description": "移除先前新增的指定名稱指令",
      "parameters": {
        "properties": {
          "name": {
            "description": "要移除的指令名稱。",
            "type": "string"
          }
        },
        "required": ["name"],
        "type": "object"
      }
    },
    {
      "name": "execute_sql_tool",
      "description": "此工具可執行 SQL 查詢、修正資料庫錯誤並存取資料庫結構。\n\n## 使用規則：\n1. 修正資料庫錯誤時，請優先使用此工具，而非直接寫程式碼如 db.drop_table(table_name)\n2. 請提供明確、格式正確且語法正確的 SQL 查詢\n3. 專注於資料庫操作、資料處理與查詢最佳化\n\n## 使用時機：\n1. 修正與排除資料庫相關問題\n2. 探索資料庫結構與關聯\n3. 更新或修改資料庫資料\n4. 執行臨時單次 SQL 程式碼\n\n## 不適用時機：\n1. 非 SQL 資料庫操作（NoSQL、檔案型資料庫）\n2. 資料庫遷移。請改用遷移工具如 Drizzle 或 flask-migrate\n\n## 範例：\n\n### 範例 1：檢視資料庫資訊\nsql_query: SELECT * FROM customers WHERE region = 'North';\n\n### 範例 2：執行臨時 SQL 查詢\nsql_query:  EXPLAIN ANALYZE SELECT orders.*, customers.name\n            FROM orders\n            JOIN customers ON orders.customer_id = customers.id;\n\n### 範例 3：插入資料\nsql_query:  INSERT INTO products (name, price, category)\n            VALUES ('New Product', 29.99, 'Electronics');",
      "parameters": {
        "properties": {
          "sql_query": {
            "description": "要執行的 SQL 查詢",
            "type": "string"
          }
        },
        "required": ["sql_query"],
        "type": "object"
      }
    },
    {
      "name": "suggest_deploy",
      "description": "當你認為專案已準備好部署時，請呼叫此功能。\n這會建議使用者可以部署專案。\n這是終止動作－呼叫後你的任務即完成，\n不需再進行任何部署驗證。\n部署流程會由 Replit Deployments 自動處理。\n\n## 使用規則：\n1. 確認專案運作正常後再使用此工具。\n2. 部署流程會由 Replit Deployments 自動處理。\n\n## 使用時機：\n1. 專案已準備好部署時。\n2. 使用者要求部署專案時。\n\n## 更多資訊：\n- 使用者需手動啟動部署。\n- Replit Deployments 會自動建置應用程式、主機、TLS、健康檢查。\n- 呼叫此工具後，無需再進行後續步驟或驗證。\n- 部署後，應用程式會在 .replit.app 網域，\n  或自訂網域（如有設定）上線。",
      "parameters": {
        "description": "空參數類別，因為 suggest deploy 不需要任何參數。",
        "properties": {},
        "type": "object"
      }
    },
    {
      "name": "report_progress",
      "description": "當使用者明確確認主要功能或任務已完成時，請呼叫此功能。\n未經使用者確認請勿呼叫。\n請在 'summary' 欄位簡要說明已完成事項。\n此工具會詢問使用者下一步要做什麼。呼叫後請勿再進行其他動作。",
      "parameters": {
        "properties": {
          "summary": {
            "description": "請將最近的變更摘要為最多 5 項。請非常簡潔，30 字以內。分行列出。\n已完成項目前加 ✓，進行中項目前加 →，請非常簡短，不超過 50 字。請勿使用表情符號。\n請用簡單、貼近日常的語言，符合使用者語言習慣。避免使用技術術語，因為使用者是非技術背景。\n最後請詢問使用者下一步要做什麼。",
            "type": "string"
          }
        },
        "required": ["summary"],
        "type": "object"
      }
    },
    {
      "name": "web_application_feedback_tool",
      "description": "此工具會擷取螢幕截圖並檢查日誌，以確認 Web 應用程式是否在 Replit 工作流程中執行。\n\n若應用程式正在執行，工具會顯示應用程式、詢問使用者問題並等待回覆。\n當應用程式狀態良好且請求任務已完成時再使用此工具，以避免不必要的延遲。",
      "parameters": {
        "properties": {
          "query": {
            "description": "你要問使用者的問題。\n\n請用簡單、貼近日常的語言，符合使用者語言習慣。避免使用技術術語，因為使用者是非技術背景。\n請將最近的變更摘要為最多 5 項。請非常簡潔，30 字以內。分行列出。\n已完成項目前加 ✓，進行中項目前加 →，請非常簡短，不超過 50 字。請勿使用表情符號。\n每次僅問一個問題。\n你可取得工作流程狀態、主控台日誌與螢幕截圖－請自行檢查，不要詢問使用者。\n請詢問使用者下一步或確認，不要要求細節。",
            "type": "string"
          },
          "website_route": {
            "anyOf": [{"type": "string"}, {"type": "null"}],
            "default": null,
            "description": "若詢問的網站路徑非根目錄（'/'），請指定具體路徑。請加上斜線開頭。例如：'/dashboard' 或 '/products/list'"
          },
          "workflow_name": {
            "description": "執行伺服器的工作流程名稱。用於判斷網站的 port。",
            "type": "string"
          }
        },
        "required": ["query", "workflow_name"],
        "type": "object"
      }
    },
    {
      "name": "shell_command_application_feedback_tool",
      "description": "此工具可執行互動式 shell 指令，並詢問 CLI 應用程式或互動式 Python 程式的輸出或行為。\n\n## 使用規則：\n1. 請提供明確、簡潔的互動式指令與明確的問題。\n2. 每次僅詢問一個有關互動行為或輸出的問題。\n3. 專注於互動功能、使用者輸入/輸出與即時行為。\n4. 請明確指定要執行的指令及必要參數。\n5. 測試 Python 程式時，請包含檔名與必要參數以啟動互動模式。\n\n## 使用時機：\n1. 測試互動式 CLI 應用程式或 Python 程式的功能與即時互動。\n2. 檢查程式是否能正確回應互動式 shell 環境中的使用者輸入。\n\n## 不適用時機：\n1. 非互動式指令或不需使用者輸入的腳本。\n2. API 測試或 Web 互動。\n3. 會開啟原生桌面 VNC 視窗的 shell 指令。\n\n## 範例：\nCommand: python interactive_script.py\nQuestion: 執行時能否輸入姓名並收到個人化問候？\n\nCommand: ./text_adventure_game\nQuestion: 能否做出影響故事進展的選擇？\n\nCommand: python -i data_analysis.py\nQuestion: 能否互動式查詢與操作資料集？",
      "parameters": {
        "properties": {
          "query": {
            "description": "關於 shell 應用程式的問題或回饋請求",
            "type": "string"
          },
          "shell_command": {
            "description": "在詢問回饋前要執行的 shell 指令",
            "type": "string"
          },
          "workflow_name": {
            "description": "此指令所屬的工作流程名稱，必須為現有工作流程。",
            "type": "string"
          }
        },
        "required": ["query", "shell_command", "workflow_name"],
        "type": "object"
      }
    },
    {
      "name": "vnc_window_application_feedback",
      "description": "此工具可執行互動式桌面應用程式，將透過 VNC 顯示給使用者。\n你可以詢問應用程式的輸出或行為。\n\n## 使用規則：\n1. 請提供明確、簡潔的執行指令與明確的問題。\n2. 每次僅詢問一個有關互動行為或輸出的問題。\n3. 專注於互動功能、使用者輸入/輸出與即時行為。\n4. 請明確指定要執行的指令及必要參數。\n\n## 使用時機：\n1. 測試互動式桌面程式的功能與即時互動。\n2. 檢查程式是否能正確回應 VNC 視窗中的使用者輸入。\n\n## 不適用時機：\n1. 非互動式指令或不需使用者輸入的腳本。\n2. API 測試或 Web 互動。\n3. 不會開啟原生桌面 VNC 視窗的 shell 指令。\n\n## 範例：\nCommand: python pygame_snake.py\nQuestion: 鍵盤事件是否能改變畫面上蛇的方向？\n\nCommand: ./opencv_face_detection\nQuestion: 是否看到照片上有綠色方框標示人臉？",
      "parameters": {
        "properties": {
          "query": {
            "description": "關於原生視窗應用程式（VNC 可見）的問題或回饋請求",
            "type": "string"
          },
          "vnc_execution_command": {
            "description": "在詢問回饋前要執行的 VNC shell 指令，該指令應啟動桌面視窗",
            "type": "string"
          },
          "workflow_name": {
            "description": "此 VNC shell 指令所屬的工作流程名稱，必須為現有工作流程。",
            "type": "string"
          }
        },
        "required": ["query", "vnc_execution_command", "workflow_name"],
        "type": "object"
      }
    },
    {
      "name": "ask_secrets",
      "description": "向使用者詢問專案所需的秘密 API 金鑰。\n若缺少秘密，請盡快使用此工具。\n秘密會加入環境變數。\n此工具成本很高。\n\n良好範例：\n- 若要設定 Stripe 安全付款，我們需要 STRIPE_SECRET_KEY。\n  此金鑰將用於安全處理付款與\n  管理應用程式中的訂閱。\n- 若要啟用 SMS 價格提醒，我們需要 Twilio API 憑證 TWILIO_ACCOUNT_SID、\n  TWILIO_AUTH_TOKEN 與 TWILIO_PHONE_NUMBER。這些將用於在價格達標時發送 SMS 通知。\n- 若要建立 OpenAI 模型應用程式，我們需要 OPENAI_API_KEY。\n\n錯誤範例（請勿使用）：\n- PHONE_NUMBER、EMAIL_ADDRESS 或 PASSWORD\n    這類變數請直接向使用者詢問，\n    請用 user_response 工具。\n- REPLIT_DOMAINS 或 REPL_ID\n    這些秘密一定存在，無需詢問。\n",
      "parameters": {
        "properties": {
          "secret_keys": {
            "description": "專案所需的秘密金鑰識別名稱陣列（如 [\"OPENAI_API_KEY\", \"GITHUB_TOKEN\"]）",
            "items": {"type": "string"},
            "type": "array"
          },
          "user_message": {
            "description": "要傳給使用者的訊息，說明為何需要這些秘密金鑰。若尚未說明，請簡單介紹什麼是秘密金鑰，假設使用者從未註冊過 API 金鑰。請禮貌提問。",
            "type": "string"
          }
        },
        "required": ["secret_keys", "user_message"],
        "type": "object"
      }
    },
    {
      "name": "check_secrets",
      "description": "檢查指定秘密是否存在於環境中。\n此工具用於驗證秘密是否存在，不會顯示實際值。\n",
      "parameters": {
        "properties": {
          "secret_keys": {
            "description": "要檢查的秘密金鑰清單。",
            "items": {"type": "string"},
            "type": "array"
          }
        },
        "required": ["secret_keys"],
        "type": "object"
      }
    }
  ],
  "internal_tags": [
    {
      "name": "View",
      "description": "包含檔案系統資訊與儲存庫細節"
    },
    {
      "name": "policy_spec",
      "description": "包含溝通、主動性與資料完整性政策"
    },
    {
      "name": "file_system",
      "description": "顯示目錄結構"
    },
    {
      "name": "repo_overview",
      "description": "包含程式碼摘要"
    },
    {
      "name": "important",
      "description": "包含重要政策提醒"
    },
    {
      "name": "workflow_console_logs",
      "description": "包含執行中工作流程的日誌"
    },
    {
      "name": "automatic_updates",
      "description": "包含系統自動產生的更新"
    },
    {
      "name": "webview_console_logs",
      "description": "包含使用者瀏覽器的日誌"
    },
    {
      "name": "function_results",
      "description": "包含函式/工具呼叫結果"
    }
  ]
}
